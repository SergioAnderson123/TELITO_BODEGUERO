<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\n\n<!doctype html>\n<html lang=\"es\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Reporte de Productor – Telito Bodeguero</title>\n  \n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n  <link rel=\"stylesheet\" href=\"<%= request.getContextPath() %>/assets/css/style.css\">\n  <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n</head>\n<body>\n  <div class=\"topbar\">\n    <div class=\"topbar-brand\"><i class=\"fas fa-warehouse\"></i> Telito Bodeguero</div>\n    <div class=\"topbar-actions\"><div class=\"user-avatar\">TB</div></div>\n  </div>\n\n  <aside class=\"sidebar\" id=\"sidebar\">\n      <div class=\"sidebar-menu-title\">Menu</div>\n      <nav>\n          <a href=\"<%= request.getContextPath() %>/inicio\"><i class=\"fas fa-home fa-fw\"></i> Pestaña principal</a>\n          <a href=\"<%= request.getContextPath() %>/UsuarioServlet\"><i class=\"fas fa-users fa-fw\"></i> Gestión de Usuarios</a>\n          <a href=\"<%= request.getContextPath() %>/ProductoServlet?action=listarInventario\"><i class=\"fas fa-boxes-stacked fa-fw\"></i> Inventario General</a>\n          <a href=\"<%= request.getContextPath() %>/administrador/acceso-roles.jsp\"><i class=\"fas fa-user-shield fa-fw\"></i> Acceso a Roles</a>\n          <a href=\"<%= request.getContextPath() %>/reportes-globales.jsp\" class=\"active\"><i class=\"fas fa-chart-pie fa-fw\"></i> Reportes Globales</a>\n          <a href=\"<%= request.getContextPath() %>/administrador/configuracion.jsp\"><i class=\"fas fa-cogs fa-fw\"></i> Configuración</a>\n      </nav>\n      <div class=\"sidebar-footer\"><a href=\"#\"><i class=\"fas fa-sign-out-alt fa-fw\"></i> Cerrar sesión</a></div>\n  </aside>\n\n  <header class=\"header\" id=\"header\">\n      <div class=\"header-left\"><i class=\"fas fa-bars\" id=\"sidebar-toggle\"></i></div>\n  </header>\n    \n  <main class=\"content\" id=\"content\">\n    <h1 class=\"page-title\"><i class=\"fas fa-seedling\"></i> Reporte de Productor</h1>\n    <div class=\"charts-grid\">\n      <div class=\"card\">\n        <h5 class=\"card-title\">Mis 5 Productos con Más Stock</h5>\n        <div class=\"chart-container\">\n            <canvas id=\"topProductosProductorChart\"></canvas>\n        </div>\n      </div>\n      <div class=\"card\">\n        <h5 class=\"card-title\">Valor de Mi Inventario por Categoría</h5>\n        <div class=\"chart-container\">\n            <canvas id=\"valorCategoriaChart\"></canvas>\n        </div>\n      </div>\n      <div class=\"card\">\n        <h5 class=\"card-title\">Mis Lotes Próximos a Vencer (60 días)</h5>\n        <div class=\"chart-container\">\n            <canvas id=\"lotesVencerChart\"></canvas>\n        </div>\n      </div>\n      <div class=\"card\">\n        <h5 class=\"card-title\">Distribución de Mis Lotes por Ubicación</h5>\n        <div class=\"chart-container\">\n            <canvas id=\"lotesUbicacionChart\"></canvas>\n        </div>\n      </div>\n    </div>\n  </main>\n\n  <script>\n    document.addEventListener(\'DOMContentLoaded\', () => {\n      const sidebarToggle = document.getElementById(\'sidebar-toggle\');\n      const sidebar = document.getElementById(\'sidebar\');\n      const content = document.getElementById(\'content\');\n      const header = document.getElementById(\'header\');\n\n      if (sidebarToggle && sidebar && content && header) {\n        sidebarToggle.addEventListener(\'click\', () => {\n          sidebar.classList.toggle(\'hidden\');\n          content.classList.toggle(\'full-width\');\n          header.classList.toggle(\'full-width\');\n        });\n      }\n      \n      // --- Paleta de Colores Profesional ---\n      const TELITO_COLORS = {\n          blue: \'rgba(54, 162, 235, 0.8)\',\n          green: \'rgba(75, 192, 192, 0.8)\',\n          yellow: \'rgba(255, 206, 86, 0.8)\',\n          red: \'rgba(255, 99, 132, 0.8)\',\n          purple: \'rgba(153, 102, 255, 0.8)\',\n          orange: \'rgba(255, 159, 64, 0.8)\'\n      };\n\n      // --- GRÁFICO 1 MEJORADO ---\n      try {\n        const topProductosLabels = JSON.parse(\'<%= request.getAttribute(\"topProductosLabelsJson\") != null ? request.getAttribute(\"topProductosLabelsJson\") : \"[]\" %>\');\n        const topProductosData = JSON.parse(\'<%= request.getAttribute(\"topProductosDataJson\") != null ? request.getAttribute(\"topProductosDataJson\") : \"[]\" %>\');\n        const ctx1 = document.getElementById(\'topProductosProductorChart\').getContext(\'2d\');\n        const gradientGreen = ctx1.createLinearGradient(0, 0, ctx1.canvas.clientWidth, 0);\n        gradientGreen.addColorStop(0, \'rgba(75, 192, 192, 0.7)\');\n        gradientGreen.addColorStop(1, \'rgba(75, 192, 192, 0.9)\');\n        new Chart(ctx1, {\n            type: \'bar\',\n            data: { labels: topProductosLabels, datasets: [{ label: \'Unidades en Stock\', data: topProductosData, backgroundColor: gradientGreen, borderColor: \'rgba(75, 192, 192, 1)\', borderWidth: 1, borderRadius: 4, borderSkipped: false }] },\n            options: { indexAxis: \'y\', responsive: true, maintainAspectRatio: false, plugins: { legend: { display: false }, tooltip: { backgroundColor: \'rgba(0, 0, 0, 0.7)\', titleFont: { size: 14, weight: \'bold\' }, bodyFont: { size: 13 }, padding: 12, cornerRadius: 4, callbacks: { label: function(context) { return context.raw + \' Unidades\'; } } } }, scales: { x: { grid: { color: \'#e9e9e9\', drawBorder: false } }, y: { grid: { display: false } } } }\n        });\n      } catch (e) { console.error(\"Error al renderizar el Gráfico 1 (Productor):\", e); }\n\n      // --- GRÁFICO 2 MEJORADO ---\n      try {\n        const valorCategoriaLabels = JSON.parse(\'<%= request.getAttribute(\"valorCategoriaLabelsJson\") != null ? request.getAttribute(\"valorCategoriaLabelsJson\") : \"[]\" %>\');\n        const valorCategoriaData = JSON.parse(\'<%= request.getAttribute(\"valorCategoriaDataJson\") != null ? request.getAttribute(\"valorCategoriaDataJson\") : \"[]\" %>\');\n        new Chart(document.getElementById(\'valorCategoriaChart\'), {\n            type: \'doughnut\',\n            data: {\n                labels: valorCategoriaLabels,\n                datasets: [{\n                    data: valorCategoriaData,\n                    backgroundColor: [ TELITO_COLORS.purple, TELITO_COLORS.blue, TELITO_COLORS.green, TELITO_COLORS.yellow, TELITO_COLORS.orange ],\n                    borderColor: \'#fff\',\n                    borderWidth: 2,\n                    hoverOffset: 8\n                }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                cutout: \'65%\',\n                plugins: {\n                    legend: { position: \'bottom\', labels: { font: { size: 13, family: \"\'Segoe UI\', \'Roboto\', \'Helvetica Neue\', \'Arial\', sans-serif\" }, padding: 20, usePointStyle: true, pointStyle: \'circle\' } },\n                    tooltip: {\n                        backgroundColor: \'rgba(0, 0, 0, 0.7)\',\n                        titleFont: { size: 14, weight: \'bold\' },\n                        bodyFont: { size: 13 },\n                        padding: 12,\n                        cornerRadius: 4,\n                        callbacks: {\n                            label: function(context) {\n                                let label = context.label || \'\';\n                                if (label) { label += \': \'; }\
                                if (context.parsed !== null) { label += new Intl.NumberFormat(\'es-PE\', { style: \'currency\', currency: \'PEN\' }).format(context.raw); }\
                                return label;\n                            }\n                        }\n                    }\n                },\n                animation: { animateScale: true, animateRotate: true }\n            }\n        });\n      } catch (e) { console.error(\"Error al renderizar el Gráfico 2 (Productor):\", e); }\n      \n      // --- GRÁFICO 3 MEJORADO ---\n      try {\n        const lotesVencerLabels = JSON.parse(\'<%= request.getAttribute(\"lotesVencerLabelsJson\") != null ? request.getAttribute(\"lotesVencerLabelsJson\") : \"[]\" %>\');\n        const lotesVencerData = JSON.parse(\'<%= request.getAttribute(\"lotesVencerDataJson\") != null ? request.getAttribute(\"lotesVencerDataJson\") : \"[]\" %>\');\n        const backgroundColors = lotesVencerData.map(dias => {\n            if (dias <= 15) return TELITO_COLORS.red;\n            if (dias <= 30) return TELITO_COLORS.orange;\n            return TELITO_COLORS.yellow;\n        });\n        const borderColors = lotesVencerData.map(dias => {\n            if (dias <= 15) return \'rgba(255, 99, 132, 1)\';\n            if (dias <= 30) return \'rgba(255, 159, 64, 1)\';\n            return \'rgba(255, 206, 86, 1)\';\n        });\n        new Chart(document.getElementById(\'lotesVencerChart\'), {\n            type: \'bar\',\n            data: { labels: lotesVencerLabels, datasets: [{ label: \'Días restantes\', data: lotesVencerData, backgroundColor: backgroundColors, borderColor: borderColors, borderWidth: 1, borderRadius: 4 }] },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                    legend: { display: false },\n                    tooltip: {\n                        backgroundColor: \'rgba(0, 0, 0, 0.7)\',\n                        titleFont: { size: 14, weight: \'bold\' },\n                        bodyFont: { size: 13 },\n                        padding: 12,\n                        cornerRadius: 4,\n                        callbacks: {\n                            label: function(context) {\n                                const dias = context.raw;\n                                if (dias === 1) return \'Vence en 1 día\';\n                                return `Vence en ${dias} días`;\n                            }\n                        }\n                    }\n                },\n                scales: { y: { beginAtZero: true, title: { display: true, text: \'Días Restantes\' }, grid: { color: \'#e9e9e9\', drawBorder: false } }, x: { grid: { display: false } } }\n            }\n        });\n      } catch (e) { console.error(\"Error al renderizar el Gráfico 3 (Productor):\", e); }\n      \n      // --- GRÁFICO 4 MEJORADO ---\n      try {\n        const lotesUbicacionLabels = JSON.parse(\'<%= request.getAttribute(\"lotesUbicacionLabelsJson\") != null ? request.getAttribute(\"lotesUbicacionLabelsJson\") : \"[]\" %>\');\n        const lotesUbicacionData = JSON.parse(\'<%= request.getAttribute(\"lotesUbicacionDataJson\") != null ? request.getAttribute(\"lotesUbicacionDataJson\") : \"[]\" %>\');\n        new Chart(document.getElementById(\'lotesUbicacionChart\'), {\n            type: \'polarArea\',\n            data: {\n                labels: lotesUbicacionLabels,\n                datasets: [{ data: lotesUbicacionData, backgroundColor: [ TELITO_COLORS.blue, TELITO_COLORS.green, TELITO_COLORS.yellow, TELITO_COLORS.orange, TELITO_COLORS.purple ], borderWidth: 1, borderColor: \'#fff\' }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                    legend: { position: \'bottom\', labels: { font: { size: 13, family: \"\'Segoe UI\', \'Roboto\', \'Helvetica Neue\', \'Arial\', sans-serif\" }, padding: 20, usePointStyle: true, pointStyle: \'circle\' } },\n                    tooltip: {\n                        backgroundColor: \'rgba(0, 0, 0, 0.7)\',\n                        titleFont: { size: 14, weight: \'bold\' },\n                        bodyFont: { size: 13 },\n                        padding: 12,\n                        cornerRadius: 4,\n                        callbacks: {\n                            label: function(context) {\n                                let label = context.label || \'\';\n                                if (label) { label += \': \'; }\
                                if (context.parsed.r !== null) { label += context.parsed.r + \' Lotes\'; }\
                                return label;\n                            }\n                        }\n                    }\n                },\n                scales: { r: { grid: { color: \'#e9e9e9\' }, ticks: { backdropColor: \'transparent\' } } },\n                animation: { animateScale: true, animateRotate: true }\n            }\n        });\n      } catch (e) { console.error(\"Error al renderizar el Gráfico 4 (Productor):\", e); }\n    });\n  </script>\n</body>\n</html>\n